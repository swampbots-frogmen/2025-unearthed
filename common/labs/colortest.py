# pybricks blocks file:{"blocks":{"languageVersion":0,"blocks":[{"type":"blockGlobalSetup","id":"bjK,wS1MYO7aiYkFSwd{","x":0,"y":0,"deletable":false,"next":{"block":{"type":"variables_set_prime_hub","id":"nBumL[,C}zn:j`1h_!SY","extraState":{"optionLevel":0},"fields":{"VAR":{"id":"[|wpds3`5Qd|HZq`$`VB"}},"next":{"block":{"type":"variables_set_color_sensor","id":"Gy^obva*93*Y%]W1bsp-","extraState":{"optionLevel":0},"fields":{"VAR":{"id":"TUY_!0ea(YW,1L7.mhT:"}},"inputs":{"PORT":{"shadow":{"type":"blockParametersPort","id":"K]kDD]NSF}n.9vS1RwR,","fields":{"NAME":"E"}}}},"next":{"block":{"type":"variables_set_color_sensor","id":"iC-G7MRd6RtOS!MaIlMO","extraState":{"optionLevel":0},"fields":{"VAR":{"id":"EW1}Rz#pmYM)k@JuT=eY"}},"inputs":{"PORT":{"shadow":{"type":"blockParametersPort","id":"%V]u@]B%LB582!C|[rkR","fields":{"NAME":"F"}}}},"next":{"block":{"type":"variables_setup_color","id":"7st7zVf?M(SdRB!Q+BLz","fields":{"VAR":{"id":"#q]l#Vj=~-OZDM`l5r*|"},"COLOUR":"#a62456"},"inputs":{"HUE":{"shadow":{"type":"unit_angle","id":"(nAYY(yNt.vPUe2]EN^/","fields":{"VALUE0":337}}},"SATURATION":{"shadow":{"type":"unit_percent","id":"V0i9NzIS]OTx@7XqNl;5","fields":{"VALUE0":78}}},"VALUE":{"shadow":{"type":"unit_percent","id":"?.6Ox)$X9n]RJSZR#D.C","fields":{"VALUE0":65}}}},"next":{"block":{"type":"variables_set_motor","id":"cmKtv2w`eBIk-.a00`15","fields":{"VAR":{"id":"C8Q!NyxL7AVV8U:PVl58"}},"inputs":{"PORT":{"shadow":{"type":"blockParametersPort","id":"1qC~NzF9BV9xlI`A7QSC","fields":{"NAME":"A"}}},"POSITIVE_DIRECTION":{"shadow":{"type":"blockParametersDirection","id":"/ZP0*gPrqf[2K)ir6yvJ","fields":{"SELECTION":"Direction.CLOCKWISE"}}}}}}}}}}}}}}},{"type":"blockGlobalStart","id":"3tJe|AWl0baN(wH9a$@.","x":0,"y":281,"deletable":false,"next":{"block":{"type":"blockFlowWhile","id":".O:f0l$l6}f+7xFl(%5Z","fields":{"MODE":"WHILE"},"inputs":{"BOOL":{"shadow":{"type":"blockLogicTrue","id":"7E%D_TKmw{6f+3!I.r_O"}},"DO":{"block":{"type":"blockMotorRun","id":",^K}X.nvBZzkRC.d-O%w","extraState":{"optionLevel":1},"fields":{"METHOD":"MOTOR_RUN_FOR"},"inputs":{"VAR":{"shadow":{"type":"variables_get_motor_device","id":"WPI]xW=h/rZ_mSi#gor%","fields":{"VAR":{"id":"C8Q!NyxL7AVV8U:PVl58","name":"tyfychgvhgjvgjcvhfcycfhgctfcyrfcftctfctryctfdctfcft","type":"Motor"}}}},"VALUE0":{"shadow":{"type":"unit_angularVelocity","id":"Pp3~aUhi%B3F.wC;o94B","fields":{"VALUE0":9000000}}},"ANGLE":{"shadow":{"type":"unit_angle","id":"M-)~wys*t4?Gu3LH+7|~","fields":{"VALUE0":90}}},"THEN":{"shadow":{"type":"parameters_stop_4","id":"T,APki@hxw=fXMRkS6P}","fields":{"VALUE":"Stop.HOLD"}}}}}}}}}}]},"variables":[{"name":"color sensor","id":"TUY_!0ea(YW,1L7.mhT:","type":"ColorSensor"},{"name":"color sensor 2","id":"EW1}Rz#pmYM)k@JuT=eY","type":"ColorSensor"},{"name":"red","id":"*lp1kx)S)Tf]Qnz$2`qv","type":"ColorDef"},{"name":"orange","id":"Ll53b^{?m+0?J9O?o#cI","type":"ColorDef"},{"name":"yellow","id":"][y.PUG~{92M0h2@aJsH","type":"ColorDef"},{"name":"green","id":"rx_=!dx,#w7;RB#Hsk!R","type":"ColorDef"},{"name":"cyan","id":"qO5~vNt1PI%C.%^UNN$E","type":"ColorDef"},{"name":"blue","id":"EhH11fvlcGABSEkSW=k~","type":"ColorDef"},{"name":"violet","id":"/onXRue1O|kg]ooIm$)^","type":"ColorDef"},{"name":"magenta","id":"#q]l#Vj=~-OZDM`l5r*|","type":"ColorDef"},{"name":"white","id":")Y:hqViDb}g:KJMw(:9B","type":"ColorDef"},{"name":"none","id":"RH^`W0rmnZh$iTa3;GMa","type":"ColorDef"},{"name":"prime hub","id":"[|wpds3`5Qd|HZq`$`VB","type":"PrimeHub"},{"name":"tyfychgvhgjvgjcvhfcycfhgctfcyrfcftctfctryctfdctfcft","id":"C8Q!NyxL7AVV8U:PVl58","type":"Motor"}],"info":{"type":"pybricks","version":"1.3.2"}}
from pybricks.hubs import PrimeHub
from pybricks.parameters import Color, Direction, Port, Stop
from pybricks.pupdevices import ColorSensor, Motor

# Set up custom colors.
Color.MAGENTA = Color(337, 78, 65)

# Set up all devices.
prime_hub = PrimeHub()
color_sensor = ColorSensor(Port.E)
color_sensor_2 = ColorSensor(Port.F)
tyfychgvhgjvgjcvhfcycfhgctfcyrfcftctfctryctfdctfcft = Motor(Port.A, Direction.CLOCKWISE)


# The main program starts here.
while True:
    tyfychgvhgjvgjcvhfcycfhgctfcyrfcftctfctryctfdctfcft.run_angle(9000000, 90)
